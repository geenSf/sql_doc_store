
ПЛАНИРОВАНИЕ ЗАДАЧ
=====================================================================

---------------------------------------------------------------------
2022-10-26
---------------------------------------------------------------------
1) создать таблицу docs

CREATE TABLE docs (
	sequence	BIGSERIAL PRIMARY KEY,
	key		TEXT,
	value		JSON
	  ); 

2) возможно, что вместо BIGSERIAL можно применить IDENTITY

CREATE TABLE docs (
	sequence	bigint primary key generated always as identity,
	key		text,
	value		jsonb
	  ); 


---------------------------------------------------------------------
2022-10-27
---------------------------------------------------------------------
3) создать таблицу docs_main (основные поля документа)

CREATE TABLE docs_main (
	id		bigint primary key generated always as identity,
	key		text,
	name		text,
	value		text
	  ); 


4) создать таблицу docs_tables (поля документа в табличных частях, табличных частей в одном документе может быть несколько)

CREATE TABLE docs_tabs (
	id		bigint primary key generated always as identity,
	doc_id		bigint NOT NULL,
	tab_id		bigint NOT NULL,
	row_id		bigint NOT NULL,
	name		text,
	value		text
	  ); 


9) создать триггер на таблице docs, который парсит JSON из таблицы docs и перекладывает данные в docs_main и docs_tabs (вызывает процедуру парсинга)

CREATE OR REPLACE TRIGGER docs_insert_trg AFTER INSERT
	ON docs
	FOR EACH STATEMENT
	REFERENCING NEW TABLE AS d
	EXECUTE PROCEDURE docs_json_parsing(d.value)  -- процедура парсинга

10) или такой вариант триггера

CREATE OR REPLACE TRIGGER docs_insert_trg AFTER INSERT
	ON docs
	FOR EACH STATEMENT
	EXECUTE FUNCTION is_docs_json_parsing(NEW.value) --триггерная  функция, возвращает тип trigger, может поднять ошибку

11) триггерная функция


12) создать процедуру парсинга JSON из docs.value

/*
!!!ВАЖНО!!! 
Разворачивает JSON-объект верхнего уровня в набор пар ключ/значение (key/value).
jsonb_each ( jsonb ) → setof record ( key text, value jsonb ) 
!!!ВАЖНО!!! 
*/

CREATE OR REPLACE PROCEDURE docs_json_parsing(value json DEFAULT = "", INOUT result integer DEFAULT = 0) AS
	$body$
	BEGIN
		--проверить параметр на пустоту
		IF value = "" THEN
			--сообщение об ошибке и преращение работы процедуры
			result := -1
			RETURN;
		END IF;
	END;
	$body$ LANGUAGE plpgsql; 



